<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blake Chan</title>
  <icon>https://www.gravatar.com/avatar/eb57de5b3bd7d66190017560f0f720ff</icon>
  <subtitle>一蓑烟雨任平生，也无风雨也无晴</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.hiecho.cn/"/>
  <updated>2019-04-04T11:39:00.102Z</updated>
  <id>https://www.hiecho.cn/</id>
  
  <author>
    <name>chanrbo</name>
    <email>blakechan@hiecho.cn</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux 下数据无损动态修改硬盘MBR分区表为GPT</title>
    <link href="https://www.hiecho.cn/2019/04/04/Linux-%E4%B8%8B%E6%95%B0%E6%8D%AE%E6%97%A0%E6%8D%9F%E5%8A%A8%E6%80%81%E4%BF%AE%E6%94%B9%E7%A1%AC%E7%9B%98MBR%E5%88%86%E5%8C%BA%E8%A1%A8%E4%B8%BAGPT/"/>
    <id>https://www.hiecho.cn/2019/04/04/Linux-下数据无损动态修改硬盘MBR分区表为GPT/</id>
    <published>2019-04-04T03:26:22.000Z</published>
    <updated>2019-04-04T11:39:00.102Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h2><p> 腾讯云官网中有一篇帮助文档“扩容Linux文件系统，<a href="https://www.qcloud.com/document/product/362/6738" target="_blank" rel="noopener">https://www.qcloud.com/document/product/362/6738</a>，讲解了GPT分区云硬盘扩容后修改分区指引和MBR分区云硬盘扩容后修改分区指引。其中MBR分区扩容下，若扩容后的空间已经大于2TB则不可选择。官网文档没有涉及到MBR的分区扩展到2T以上该怎么处理。</p><p>注：写在文前。不管任何形式的扩容硬盘，最好都事先做好硬盘数据的快照，避免手误或者其他因素造成数据丢失。数据无价！！！</p><h2 id="2-下面讲解数据无损动态调整MBR的分区为GPT"><a href="#2-下面讲解数据无损动态调整MBR的分区为GPT" class="headerlink" title="2.下面讲解数据无损动态调整MBR的分区为GPT"></a>2.下面讲解数据无损动态调整MBR的分区为GPT</h2><p>（1）fdisk -l  /dev/vdb  &amp;&amp; partprobe -s</p><p><img src="https://ask.qcloudimg.com/draft/1188303/2ws82epb4x.png" alt></p><p>（2）下面以/dev/vdc这块盘做讲解，新建了一个/dev/vdc1分区，并且格式化为ext3文件系统。</p><p>fdsik  -l    /dev/vdc   &amp;&amp;    mkfs.ext3   /dev/vdc1</p><p><img src="https://ask.qcloudimg.com/draft/1188303/c5mxi51gar.png" alt></p><p>（3）下面我在控制台把/dev/vdc这块硬盘扩容到2T以上，并且重新挂载。</p><p><img src="https://ask.qcloudimg.com/draft/1188303/jwe2k5j31x.png" alt="image.png"></p><p><img src="https://ask.qcloudimg.com/draft/1188303/1pfh5o34h3.png" alt="image.png"></p><p>（4）接下来看一下，在MBR分区表下，扩容/dev/vdc1到2.5T能不能行？</p><p><img src="https://ask.qcloudimg.com/draft/1188303/2phoeqho44.png" alt></p><p>这里看到只能扩容到2TB。gg</p><p>（5）显然这是MBR分区表的局限。MBR分区表共512个字节。前446字节包括boot loader信息和grub引导信息，还有64字节的磁盘分区信息，以及2个字节的结束标志。而每个主分区要在分区表里占用16字节。所以单个硬盘只能分64/16个主分区。至于为什么每个分区不能超过2TB，请看下图。</p><p><img src="https://ask.qcloudimg.com/draft/1188303/epdswwterx.png" alt="image.png"></p><p>（6）接下来说一下我这个数据无损在线动态调整MBR为GPT方法吧。注：不管是怎么扩容硬盘，扩容前都建议对云硬盘做一下快照。</p><p>A.为了证明数据真的无损，我们新建几个file。最后再来看一下数据情况。</p><p><img src="https://ask.qcloudimg.com/draft/1188303/pumch8ut0w.png" alt="image.png"></p><p><img src="https://ask.qcloudimg.com/draft/1188303/yu6jq2qrwk.png" alt="image.png"></p><p>B.卸载/dev/vdc1</p><p><img src="https://ask.qcloudimg.com/draft/1188303/ysh3qtkbez.png" alt="image.png"></p><p>C.用gdisk(安装方法:yum install gdisk)把MBR分区格式转换程GPT分区格式(MBR不支持2T以上大小)</p><p><img src="https://ask.qcloudimg.com/draft/1188303/m4mmudzdbr.png" alt></p><p>注：这个方法在大部分场景下都是可以转mbr为gpt的，只有磁盘开头前33个扇区，或最后34个扇区被分区占用的场景不支持。我们的硬盘分区时，默认是从2048扇区开始分的，所以一般不会出现前34个扇区被占用，客户控制台扩容实体云硬盘之后，后33扇区也不存在被占用。所以绝大多数情况下前34后33分区都不会被占用。除非客户主动刻意去占用。这里可以通过part ed  硬盘–unit s–p查看硬盘前34分区有没有被占用。</p><p>D.使用parted删除vdc1，并重新创建vdc1(fdisk不支持超过2TB大小，注意记住删除前vdc1的start sector，创建新的vdc1的时候start sector必须和删除前一致)</p><p><img src="https://ask.qcloudimg.com/draft/1188303/o2xq9xys62.png" alt></p><p>E.目前还需要扩展下分区，才能挂载正常显示分区大小。</p><p><img src="https://ask.qcloudimg.com/draft/1188303/wp46xzu7l3.png" alt></p><p>注：这里也可能会遇到下面这种情况</p><p>‘’’</p><p>[root@bobo ~]# e2fsck -yf /dev/vdc1</p><p>e2fsck 1.42.9 (28-Dec-2013)</p><p>The filesystem size (according to the superblock) is xxx blocks</p><p>The physical size of the device is xxx blocks</p><p>Either the superblock or the partition table is likely to be corrupt!</p><p>Abort? yes</p><p>‘’’</p><p>这里是检测到分区表变化了，询问是否放弃修复，并不是报错。这里我加y这个参数的原因在于，如果出现错误直接fix。如果遇到了这种情况，可以直接用这个命令e2fsck -f /dev/vdb1直接修复分区就ok。</p><p>F.重新挂载下看下分区大小,并检查下数据完整性</p><p><img src="https://ask.qcloudimg.com/draft/1188303/y1iweazerj.png" alt></p><h2 id="3-GPT分区的优越性（GUID-partition-table-GPT-磁盘分区表。）"><a href="#3-GPT分区的优越性（GUID-partition-table-GPT-磁盘分区表。）" class="headerlink" title="3.GPT分区的优越性（GUID partition table, GPT 磁盘分区表。）"></a>3.GPT分区的优越性（GUID partition table, GPT 磁盘分区表。）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">因为过去一个扇区大小就是 512Bytes 而已，不过目前已经有 4K 的扇区设计出现！为了相容于所有的磁盘，因此在扇区的定义上面， 大多会使用所谓的逻辑区块位址（Logical Block Address, LBA）来处理。GPT 将磁盘所有区块以此 LBA（默认为 512Bytes ！） 来规划，而第一个 LBA 称为 LBA0 （从 0 开始编号）。与 MBR 仅使用第一个 512Bytes 区块来纪录不同， GPT 使用了 34 个 LBA 区块来纪录分区信息！同时与过去 MBR 仅有一的区块，被干掉就死光光的情况不同， GPT 除了前面 34 个 LBA 之外，整个磁盘的最后 33 个 LBA 也拿来作为另一个备份！这样或许会比较安全些吧！</span><br></pre></td></tr></table></figure><p><img src="https://ask.qcloudimg.com/draft/1188303/5t19n77idf.png" alt="image.png">     </p><p>结构详解：</p><p>LBA0：和传统MBR分区一样，仍然为主引导记录</p><p>LBA1：我们称之为“主分区头”</p><p>LBA2-33：共计32个扇区，我们称之为“主分区节点”</p><p>LBA-1：我们称之为“备份分区头”，它就是“主分区头”的一个Copy</p><p>LBA-2-33：共计32个扇区，我们称之为“备份分区节点”，它就是“主分区节点”的一个Copy</p><p>LBA34：正常的GPT分区内容，文件系统（如：FAT，NTFS，EXT等）就是构建在这里面。</p><p>大概了解一下:LBA2-LBA33</p><p><img src="https://ask.qcloudimg.com/draft/1188303/i6g67fhi52.png" alt="image.png"></p><h2 id="4-常用的分区处理的工具"><a href="#4-常用的分区处理的工具" class="headerlink" title="4.常用的分区处理的工具"></a>4.常用的分区处理的工具</h2><p>（1）fdisk(MBR)</p><p><img src="https://ask.qcloudimg.com/draft/1188303/a51xfzbahg.png" alt="image.png"></p><p>（2）gdisk(GPT)</p><p><img src="https://ask.qcloudimg.com/draft/1188303/mg50zm4amc.png" alt="image.png"></p><p>（3）parted（MBR和GPT通用）</p><p><img src="https://ask.qcloudimg.com/draft/1188303/1ei1y51aq1.png" alt="image.png"></p><p>注:gdisk和fdisk最好不要混用，不要用fdsik处理gpt分区，也不要用gdisk处理mbr分区，一不小心，数据搞没了，后悔都来不及。</p><p>云+社区链接：<a href="https://cloud.tencent.com/developer/article/1175328" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1175328</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-简介&quot;&gt;&lt;a href=&quot;#1-简介&quot; class=&quot;headerlink&quot; title=&quot;1.简介&quot;&gt;&lt;/a&gt;1.简介&lt;/h2&gt;&lt;p&gt; 腾讯云官网中有一篇帮助文档“扩容Linux文件系统，&lt;a href=&quot;https://www.qcloud.com/doc
      
    
    </summary>
    
      <category term="Linux" scheme="https://www.hiecho.cn/categories/Linux/"/>
    
    
      <category term="MBR" scheme="https://www.hiecho.cn/tags/MBR/"/>
    
      <category term="GPT" scheme="https://www.hiecho.cn/tags/GPT/"/>
    
  </entry>
  
  <entry>
    <title>Centos7 升级系统内核</title>
    <link href="https://www.hiecho.cn/2019/02/28/Centos7-%E5%8D%87%E7%BA%A7%E7%B3%BB%E7%BB%9F%E5%86%85%E6%A0%B8/"/>
    <id>https://www.hiecho.cn/2019/02/28/Centos7-升级系统内核/</id>
    <published>2019-02-28T03:56:44.000Z</published>
    <updated>2019-02-28T12:21:38.871Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Centos7-升级系统内核"><a href="#Centos7-升级系统内核" class="headerlink" title="Centos7 升级系统内核"></a>Centos7 升级系统内核</h2><ul><li><p>安装yum源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm</span><br></pre></td></tr></table></figure></li><li><p>查看列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum --disablerepo=* --enablerepo=elrepo-kernel repolist</span><br><span class="line">yum --disablerepo=* --enablerepo=elrepo-kernel list kernel*</span><br></pre></td></tr></table></figure></li><li><p>安装最新版本的kernel</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum --enablerepo=elrepo-kernel install kernel-ml-devel kernel-ml -y</span><br></pre></td></tr></table></figure></li><li><p>设置为默认内核</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# awk -F\&apos; &apos;$1==&quot;menuentry &quot; &#123;print $2&#125;&apos; /etc/grub2.cfg</span><br><span class="line">CentOS Linux (4.20.13-1.el7.elrepo.x86_64) 7 (Core)</span><br><span class="line">CentOS Linux (3.10.0-957.el7.x86_64) 7 (Core)</span><br><span class="line">CentOS Linux (0-rescue-54dbc7f0d8ee49babd50ed6f840123fa) 7 (Core)</span><br><span class="line">当前默认内核为1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/default/grub </span><br><span class="line">GRUB_TIMEOUT=5</span><br><span class="line">GRUB_DISTRIBUTOR=&quot;$(sed &apos;s, release .*$,,g&apos; /etc/system-release)&quot;</span><br><span class="line">GRUB_DEFAULT=0</span><br><span class="line">GRUB_DISABLE_SUBMENU=true</span><br><span class="line">GRUB_TERMINAL_OUTPUT=&quot;console&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;crashkernel=auto rd.lvm.lv=centos/root rd.lvm.lv=centos/swap rhgb quiet&quot;</span><br><span class="line">GRUB_DISABLE_RECOVERY=&quot;true&quot;</span><br><span class="line"></span><br><span class="line">GRUB_DEFAULT=saved 改成 GRUB_DEFAULT=0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line">生成新配置文件</span><br></pre></td></tr></table></figure></li><li><p>重启系统查看内核</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# reboot</span><br><span class="line">[root@localhost ~]# uname -r</span><br><span class="line">4.20.13-1.el7.elrepo.x86_64</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Centos7-升级系统内核&quot;&gt;&lt;a href=&quot;#Centos7-升级系统内核&quot; class=&quot;headerlink&quot; title=&quot;Centos7 升级系统内核&quot;&gt;&lt;/a&gt;Centos7 升级系统内核&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装yum源&lt;/p&gt;
&lt;f
      
    
    </summary>
    
      <category term="Linux" scheme="https://www.hiecho.cn/categories/Linux/"/>
    
    
      <category term="centos" scheme="https://www.hiecho.cn/tags/centos/"/>
    
      <category term="kernel" scheme="https://www.hiecho.cn/tags/kernel/"/>
    
  </entry>
  
  <entry>
    <title>KVM虚拟化技术之使用Qemu-kvm创建和管理虚拟机</title>
    <link href="https://www.hiecho.cn/2019/02/27/KVM%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF%E4%B9%8B%E4%BD%BF%E7%94%A8Qemu-kvm%E5%88%9B%E5%BB%BA%E5%92%8C%E7%AE%A1%E7%90%86%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    <id>https://www.hiecho.cn/2019/02/27/KVM虚拟化技术之使用Qemu-kvm创建和管理虚拟机/</id>
    <published>2019-02-26T16:00:00.000Z</published>
    <updated>2019-02-27T15:50:59.668Z</updated>
    
    <content type="html"><![CDATA[<h2 id="KVM虚拟化技术之使用Qemu-kvm创建和管理虚拟机"><a href="#KVM虚拟化技术之使用Qemu-kvm创建和管理虚拟机" class="headerlink" title="KVM虚拟化技术之使用Qemu-kvm创建和管理虚拟机"></a>KVM虚拟化技术之使用Qemu-kvm创建和管理虚拟机</h2><ul><li><p>KVM介绍</p><ul><li>KVM是开源软件，全称是<strong>kernel-based</strong> <strong>virtual</strong> <strong>machine</strong>（基于内核的虚拟机），属于内核的一个模块，Linux 2.6.20核心以上的版本中默认带有kvm模块。它包含一个为处理器提供底层虚拟化 可加载的核心模块kvm.ko（kvm-intel.ko或kvm-AMD.ko）</li><li>kvm虚拟机=kvm模块 + qemu模拟器<ul><li>kvm负责分配内存和cpu，qemu负责模拟网络设备和io设备</li></ul></li></ul></li><li><p>系统初始化</p><ul><li><p>检查服务器是否支持虚拟化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kvm ~]# egrep &apos;(vmx|svm)&apos; /proc/cpuinfo</span><br></pre></td></tr></table></figure></li><li><p>检查内核中是否加载kvm模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@kvm ~]# lsmod | grep kvm</span><br><span class="line">kvm_intel             174841  3 </span><br><span class="line">kvm                   578518  1 kvm_intel</span><br><span class="line">irqbypass              13503  3 kvm</span><br></pre></td></tr></table></figure></li><li><p>关闭selinux</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@kvm ~]# cat /etc/sysconfig/selinux | grep &quot;SELINUX&quot;</span><br><span class="line"># SELINUX= can take one of these three values:</span><br><span class="line">SELINUX=disabled</span><br><span class="line"># SELINUXTYPE= can take one of three two values:</span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure></li></ul></li><li><p>为KVM虚拟机配置桥接网络</p><ul><li><p>新建网桥br0，并配置，转移ip到网桥上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@kvm ~]# cd /etc/sysconfig/network-scripts/</span><br><span class="line">[root@kvm network-scripts]# cat ifcfg-br0 </span><br><span class="line">TYPE=Bridge</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">NAME=br0</span><br><span class="line">DEVICE=br0</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.175.6</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.175.2</span><br></pre></td></tr></table></figure></li><li><p>配置eth0使用桥接模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@kvm network-scripts]# cat ifcfg-eth0 </span><br><span class="line">TYPE=Ethernet</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">NAME=eth0</span><br><span class="line">DEVICE=eth0</span><br><span class="line">ONBOOT=yes</span><br><span class="line">BRIDGE=br0</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>配置完成后，重启网络服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kvm network-scripts]# systemctl restart network</span><br></pre></td></tr></table></figure></li><li><p>查看ifconfig如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@kvm network-scripts]# ifconfig br0</span><br><span class="line">br0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.175.6  netmask 255.255.255.0  broadcast 192.168.175.255</span><br><span class="line">        inet6 fe80::20c:29ff:fe52:20f6  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:0c:29:52:20:f6  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 49  bytes 4628 (4.5 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 53  bytes 7133 (6.9 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">[root@kvm network-scripts]# ifconfig eth0</span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        ether 00:0c:29:52:20:f6  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 6382  bytes 469272 (458.2 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 8765  bytes 703077 (686.5 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>安装kvm相关组件</p><ul><li><p>安装命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kvm network-scripts]# yum  install qemu-kvm python-virtinst virt-* libvirt libvirt-client bridge-utils qemu-img -y</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>各组件功能</p><ol><li>kvm模块：qemu-kvm</li><li>图形界面管理虚拟机：virt-manager</li><li>网络接口管理工具：bridge-utils</li><li>虚拟机管理工具：libvirt</li><li>虚拟机管理工具客户端：libivirt-client</li><li>python组件，记录xml信息：python-virtinst</li><li>qemu组件,创建硬盘，启动虚拟机等：qemu-img</li><li>虚拟机安装命令：virt-install</li></ol></li><li><p>启动libvirt服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@kvm network-scripts]# systemctl start libvirtd &amp;&amp; systemctl enable libvirtd &amp;&amp; systemctl status libvirt</span><br></pre></td></tr></table></figure></li><li><p>查看系统网络，会自动生成一个桥设备，默认虚拟机和宿主机通信的设备</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@kvm network-scripts]# ifconfig virbr0</span><br><span class="line">virbr0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255</span><br><span class="line">        ether 52:54:00:66:6f:6a  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line">[root@kvm network-scripts]# brctl show</span><br><span class="line">bridge name     bridge id               STP enabled     interfaces</span><br><span class="line">br0             8000.000c295220f6       no              eth0</span><br><span class="line">virbr0          8000.525400666f6a       yes             virbr0-nic</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>安装虚拟机</p><ul><li><p>创建硬盘设备</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img create -f qcow2  /data/vm1.qcow2 5G</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>创建虚拟机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virt-install --virt-type kvm --name vm2 --ram 512 --cdrom=/data/CentOS-7.5-x86_64-DVD-1804.iso --disk path=/data/vm1.qcow2 --network bridge=br0 --graphics vnc,listen=0.0.0.0 --noautoconsole</span><br><span class="line">注：自行上传iso系统镜像</span><br></pre></td></tr></table></figure></li><li><p>安装tigervnc或者vnc viewe工具可以连接到安装虚拟机图形界面，默认端口5900</p></li><li><p>查看kvm进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@kvm ~]# ps -ef | grep kvm</span><br><span class="line">root        628      2  0 22:02 ?        00:00:00 [kvm-irqfd-clean]</span><br><span class="line">avahi       714      1  0 22:02 ?        00:00:00 avahi-daemon: running [kvm.local]</span><br><span class="line">qemu       3070      1  3 22:21 ?        00:01:26 /usr/libexec/qemu-kvm -name vm2 -S -machine pc-i440fx-rhel7.0.0,accelkvm,usb=off,dump-guest-core=off -cpu IvyBridge-IBRS -m 512 -realtime mlock=off -smp 1,sockets=1,cores=1,threads=1 -uuid ef1dcbd8-1684-4ae0-9dc7-500d59236911 -no-user-config -nodefaults -chardev socket,id=charmonitor,path=/var/lib/libvirt/qemu/domain-2-vm2/monitor.sock,server,nowait -mon chardev=charmonitor,id=monitor,mode=control -rtc base=utc,driftfix=slew -global kvm-pit.lost_tick_policy=delay -no-hpet -no-shutdown -global PIIX4_PM.disable_s3=1 -global PIIX4_PM.disable_s4=1 -boot strict=on -device ich9-usb-ehci1,id=usb,bus=pci.0,addr=0x4.0x7 -device ich9-usb-uhci1,masterbus=usb.0,firstport=0,bus=pci.0,multifunction=on,addr=0x4 -device ich9-usb-uhci2,masterbus=usb.0,firstport=2,bus=pci.0,addr=0x4.0x1 -device ich9-usb-uhci3,masterbus=usb.0,firstport=4,bus=pci.0,addr=0x4.0x2 -device virtio-serial-pci,id=virtio-serial0,bus=pci.0,addr=0x5 -drive file=/data/vm1.qcow2,format=qcow2,if=none,id=drive-virtio-disk0 -device virtio-blk-pci,scsi=off,bus=pci.0,addr=0x6,drive=drive-virtio-disk0,id=virtio-disk0,bootindex=1 -drive if=none,id=drive-ide0-0-0,readonly=on -device ide-cd,bus=ide.0,unit=0,drive=drive-ide0-0-0,id=ide0-0-0 -netdev tap,fd=26,id=hostnet0,vhost=on,vhostfd=28 -device virtio-net-pci,netdev=hostnet0,id=net0,mac=52:54:00:0f:1f:00,bus=pci.0,addr=0x3 -chardev pty,id=charserial0 -device isa-serial,chardev=charserial0,id=serial0 -chardev socket,id=charchannel0,path=/var/lib/libvirt/qemu/channel/target/domain-2-vm2/org.qemu.guest_agent.0,server,nowait -device virtserialport,bus=virtio-serial0.0,nr=1,chardev=charchannel0,id=channel0,name=org.qemu.guest_agent.0 -device usb-tablet,id=input0,bus=usb.0,port=1 -vnc 0.0.0.0:0 -vga cirrus -device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x7 -msg timestamp=on</span><br></pre></td></tr></table></figure><p>实际上一个虚拟机对于宿主机而言，只是宿主机上的一个进程而已</p></li><li><p>查看虚拟机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@kvm ~]# virsh list</span><br><span class="line"> Id    Name                           State</span><br><span class="line">----------------------------------------------------</span><br><span class="line"> 2     vm2                            running</span><br></pre></td></tr></table></figure></li><li><p>virsh常用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">virsh list --all     ##列出所有虚拟机</span><br><span class="line">virsh list           ##列出运行中的虚拟机</span><br><span class="line">virsh start vm       ##启动虚拟机</span><br><span class="line">virsh shutdown vm    ##关闭虚拟机</span><br><span class="line">virsh undfine vm     ##销毁虚拟机</span><br><span class="line">virsh console vm1    ##通过console连接虚拟机</span><br><span class="line">virsh edit vm1       ##编辑位于/etc/libvirt/qemu/vm1.xml</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;KVM虚拟化技术之使用Qemu-kvm创建和管理虚拟机&quot;&gt;&lt;a href=&quot;#KVM虚拟化技术之使用Qemu-kvm创建和管理虚拟机&quot; class=&quot;headerlink&quot; title=&quot;KVM虚拟化技术之使用Qemu-kvm创建和管理虚拟机&quot;&gt;&lt;/a&gt;KVM虚拟
      
    
    </summary>
    
      <category term="虚拟化" scheme="https://www.hiecho.cn/categories/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
    
      <category term="kvm" scheme="https://www.hiecho.cn/tags/kvm/"/>
    
      <category term="qemu" scheme="https://www.hiecho.cn/tags/qemu/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.hiecho.cn/2019/02/26/hello-world/"/>
    <id>https://www.hiecho.cn/2019/02/26/hello-world/</id>
    <published>2019-02-26T09:56:00.871Z</published>
    <updated>2019-02-26T09:56:00.871Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
